const plugin = {
    configs: { "all": require("./configs/all.js") },
    rules: {
        "no-console": require("./rules/eslint-no-console.js"),
		"no-empty-function": require("./rules/ts-eslint-no-empty-function.js"),
		"no-inferrable-types": require("./rules/ts-eslint-no-inferrable-types.js"),
		"no-unused-vars": require("./rules/ts-eslint-no-unused-vars.js"),
		"no-empty-static-block": require("./rules/eslint-no-empty-static-block.js"),
		"no-self-assign": require("./rules/eslint-no-self-assign.js"),
		"no-unused-expressions": require("./rules/eslint-no-unused-expressions.js"),
		"no-unused-private-class-members": require("./rules/eslint-no-unused-private-class-members.js"),
		"no-useless-catch": require("./rules/eslint-no-useless-catch.js"),
		"prefer-optional-chain": require("./rules/ts-eslint-prefer-optional-chain.js"),
		"promise-function-async": require("./rules/ts-eslint-promise-function-async.js"),
		"adjacent-overload-signatures": require("./rules/ts-eslint-adjacent-overload-signatures.js"),
		"explicit-function-return-type": require("./rules/ts-eslint-explicit-function-return-type.js"),
		"no-confusing-non-null-assertion": require("./rules/ts-eslint-no-confusing-non-null-assertion.js"),
		"for-direction": require("./rules/eslint-for-direction.js"),
		"max-len": require("./rules/eslint-max-len.js"),
		"max-nested-callbacks": require("./rules/eslint-max-nested-callbacks.js"),
		"max-statements-per-line": require("./rules/eslint-max-statements-per-line.js"),
		"no-async-promise-executor": require("./rules/eslint-no-async-promise-executor.js"),
		"no-bitwise": require("./rules/eslint-no-bitwise.js"),
		"no-extra-boolean-cast": require("./rules/eslint-no-extra-boolean-cast.js"),
		"no-nonoctal-decimal-escape": require("./rules/eslint-no-nonoctal-decimal-escape.js"),
		"no-octal": require("./rules/eslint-no-octal.js"),
		"no-regex-spaces": require("./rules/eslint-no-regex-spaces.js"),
		"no-useless-backreference": require("./rules/eslint-no-useless-backreference.js"),
		"no-useless-escape": require("./rules/eslint-no-useless-escape.js"),
		"no-with": require("./rules/eslint-no-with.js"),
		"prefer-const": require("./rules/eslint-prefer-const.js"),
		"dot-notation": require("./rules/eslint-dot-notation.js"),
		"array-type": require("./rules/ts-eslint-array-type.js"),
		"ban-tslint-comment": require("./rules/ts-eslint-ban-tslint-comment.js"),
		"consistent-generic-constructors": require("./rules/ts-eslint-consistent-generic-constructors.js"),
		"consistent-indexed-object-style": require("./rules/ts-eslint-consistent-indexed-object-style.js"),
		"consistent-type-assertions": require("./rules/ts-eslint-consistent-type-assertions.js"),
		"consistent-type-definitions": require("./rules/ts-eslint-consistent-type-definitions.js"),
		"naming-convention": require("./rules/ts-eslint-naming-convention.js"),
		"prefer-for-of": require("./rules/ts-eslint-prefer-for-of.js"),
		"prefer-function-type": require("./rules/ts-eslint-prefer-function-type.js"),
		"unified-signatures": require("./rules/ts-eslint-unified-signatures.js"),
		"prefer-spread": require("./rules/eslint-prefer-spread.js"),
		"await-thenable": require("./rules/ts-eslint-await-thenable.js"),
		"no-magic-numbers": require("./rules/eslint-no-magic-numbers.js"),
		"require-await": require("./rules/eslint-require-await.js"),
		"no-shadow": require("./rules/ts-eslint-no-shadow.js"),
		"curly": require("./rules/eslint-curly.js"),
		"no-fallthrough": require("./rules/eslint-no-fallthrough.js"),
		"no-prototype-builtins": require("./rules/eslint-no-prototype-builtins.js"),
		"no-shadow-restricted-names": require("./rules/eslint-no-shadow-restricted-names.js"),
		"no-unsafe-optional-chaining": require("./rules/eslint-no-unsafe-optional-chaining.js"),
		"no-var": require("./rules/eslint-no-var.js"),
		"explicit-member-accessibility": require("./rules/ts-eslint-explicit-member-accessibility.js"),
		"max-lines": require("./rules/eslint-max-lines.js"),
		"max-lines-per-function": require("./rules/eslint-max-lines-per-function.js"),
		"no-global-assign": require("./rules/eslint-no-global-assign.js"),
		"no-for-in-array": require("./rules/ts-eslint-no-for-in-array.js"),
		"prefer-find": require("./rules/ts-eslint-prefer-find.js"),
		"no-labels": require("./rules/eslint-no-labels.js"),
		"no-floating-promises": require("./rules/ts-eslint-no-floating-promises.js"),
		"no-misused-promises": require("./rules/ts-eslint-no-misused-promises.js"),
		"eqeqeq": require("./rules/eslint-eqeqeq.js"),
		"no-await-in-loop": require("./rules/eslint-no-await-in-loop.js"),
		"no-case-declarations": require("./rules/eslint-no-case-declarations.js"),
		"no-class-assign": require("./rules/eslint-no-class-assign.js"),
		"no-compare-neg-zero": require("./rules/eslint-no-compare-neg-zero.js"),
		"no-cond-assign": require("./rules/eslint-no-cond-assign.js"),
		"no-constant-binary-expression": require("./rules/eslint-no-constant-binary-expression.js"),
		"no-constant-condition": require("./rules/eslint-no-constant-condition.js"),
		"no-control-regex": require("./rules/eslint-no-control-regex.js"),
		"no-debugger": require("./rules/eslint-no-debugger.js"),
		"no-delete-var": require("./rules/eslint-no-delete-var.js"),
		"no-dupe-else-if": require("./rules/eslint-no-dupe-else-if.js"),
		"no-duplicate-case": require("./rules/eslint-no-duplicate-case.js"),
		"no-empty": require("./rules/eslint-no-empty.js"),
		"no-empty-character-class": require("./rules/eslint-no-empty-character-class.js"),
		"no-empty-pattern": require("./rules/eslint-no-empty-pattern.js"),
		"no-eval": require("./rules/eslint-no-eval.js"),
		"no-ex-assign": require("./rules/eslint-no-ex-assign.js"),
		"no-invalid-regexp": require("./rules/eslint-no-invalid-regexp.js"),
		"no-loss-of-precision": require("./rules/eslint-no-loss-of-precision.js"),
		"no-misleading-character-class": require("./rules/eslint-no-misleading-character-class.js"),
		"no-throw-literal": require("./rules/eslint-no-throw-literal.js"),
		"no-unsafe-finally": require("./rules/eslint-no-unsafe-finally.js"),
		"no-unused-labels": require("./rules/eslint-no-unused-labels.js"),
		"radix": require("./rules/eslint-radix.js"),
		"use-isnan": require("./rules/eslint-use-isnan.js"),
    }
};

module.exports = plugin;
